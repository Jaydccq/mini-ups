spring:
  
  # Database Configuration for Tests
  # Uses H2 for fast unit tests, PostgreSQL for CI integration tests
  datasource:
    url: ${TEST_DATABASE_URL:jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE}
    driver-class-name: ${TEST_DATABASE_DRIVER:org.h2.Driver}
    username: ${TEST_DATABASE_USERNAME:sa}
    password: ${TEST_DATABASE_PASSWORD:password}
    hikari:
      maximum-pool-size: 10
      minimum-idle: 1
      connection-timeout: 30000
  
  # JPA Configuration
  jpa:
    database-platform: ${TEST_DATABASE_DIALECT:org.hibernate.dialect.H2Dialect}
    hibernate:
      ddl-auto: create-drop
    show-sql: false
    properties:
      hibernate:
        dialect: ${TEST_DATABASE_DIALECT:org.hibernate.dialect.H2Dialect}
        format_sql: false
        id:
          new_generator_mappings: false
        jdbc:
          batch_size: 25
        hbm2ddl:
          auto: create-drop
        globally_quoted_identifiers: false
    defer-datasource-initialization: true
    generate-ddl: true
  
  # Redis Configuration for Testing
  data:
    redis:
      host: ${TEST_REDIS_HOST:localhost}
      port: ${TEST_REDIS_PORT:6379}  # Aligned with standard Redis and CI service port
      database: 1
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 4
          max-idle: 2
          min-idle: 0
      repositories:
        enabled: false
  
  # RabbitMQ Configuration (Disabled for Testing)
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
  
  # Auto-configuration exclusions for testing
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration
  


# Logging Configuration
logging:
  level:
    com.miniups: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: DEBUG

# JWT Configuration for Testing
jwt:
  secret: F3E2D1C0B9A8G7H6I5J4K3L2M1N0O9P8Q7R6S5T4U3V2W1X0Y9Z8A7B6C5D4E3F2G1H0I9J8K7L6M5N4O3P2Q1R0
  expiration: 3600000  # 1 hour

# World Simulator Mock Configuration
world:
  simulator:
    host: localhost
    port: 12345
    connection-timeout: 5000
    read-timeout: 10000
    enabled: false  # Disabled for unit tests

# Amazon Integration Mock Configuration
amazon:
  api:
    url: http://localhost:8080
    timeout: 5000
    enabled: false  # Disabled for unit tests

# Management and Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

# Application-specific Configuration for testing
app:
  cors:
    allowed-origins: http://localhost:3000
  rabbitmq:
    test:
      enabled: true # Enable test mode which uses mocks
  notifications:
    enabled: false # Disable notifications in tests
    email:
      enabled: false
    sms:
      enabled: false
    push:
      enabled: false

# Rate Limiting Configuration for testing
rate-limiting:
  enabled: false # Disable rate limiting in tests
  shipment-creation:
    requests-per-minute: 1000
  general-api:
    requests-per-minute: 1000

# HTTP Client Configuration for testing
http:
  client:
    max-total-connections: 10
    max-default-per-route: 5
    connect-timeout-ms: 5000
    socket-timeout-ms: 10000