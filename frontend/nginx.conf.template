# =======================================
# Production Nginx Configuration Template
# Mini-UPS Frontend Application
# =======================================

# User and worker configuration (master as root, workers as non-root user)
user miniups miniups;
worker_processes auto;
worker_rlimit_nofile 65535;

# Error log (cloud-native: symlinked to stderr for Docker log collection)
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx/nginx.pid;

# Events block
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# HTTP block
http {
    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    # Access log (cloud-native: symlinked to stdout for Docker log collection)
    access_log /var/log/nginx/access.log main;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    client_max_body_size 16M;
    client_body_timeout 60;
    client_header_timeout 60;
    send_timeout 60;

    # Hide nginx version
    server_tokens off;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=2r/s;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

    # Map for WebSocket upgrade
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # Upstream configuration for backend (configurable)
    upstream backend {
        server ${BACKEND_HOST}:${BACKEND_PORT} max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Main server block
    server {
        listen 8080 default_server;
        listen [::]:8080 default_server;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;

        # Connection limits
        limit_conn conn_limit_per_ip 20;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header X-Download-Options "noopen" always;
        add_header X-Permitted-Cross-Domain-Policies "none" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # Content Security Policy for production
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.googletagmanager.com https://www.google-analytics.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https: blob:; connect-src 'self' ws: wss: https: http:; frame-src 'none'; object-src 'none'; base-uri 'self';" always;

        # Compression configuration
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            text/json
            application/json
            application/javascript
            application/xml+rss
            application/atom+xml
            application/x-font-ttf
            font/opentype
            image/svg+xml
            image/x-icon;

        # Brotli compression (if available)
        # brotli on;
        # brotli_comp_level 6;
        # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

        # Cache static assets aggressively
        location ~* \.(js|mjs|css|map)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options "nosniff";
            access_log off;
            
            # Handle missing source maps gracefully
            try_files $uri =404;
        }

        # Cache images and fonts
        location ~* \.(png|jpg|jpeg|gif|ico|svg|webp|avif)$ {
            expires 6M;
            add_header Cache-Control "public, immutable";
            access_log off;
            try_files $uri =404;
        }

        location ~* \.(woff|woff2|ttf|eot|otf)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Access-Control-Allow-Origin "*";
            access_log off;
            try_files $uri =404;
        }

        # Health check endpoint with detailed status
        location /health {
            access_log off;
            default_type application/json;
            return 200 '{"status":"healthy","timestamp":"$time_iso8601","server":"$hostname"}';
        }

        # Simple health check for load balancer
        location /ping {
            access_log off;
            return 200 "pong\n";
            add_header Content-Type text/plain;
        }

        # Version information endpoint
        location /version {
            access_log off;
            try_files /version.json =404;
            add_header Content-Type application/json;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }

        # API proxy with enhanced configuration
        location /api/ {
            # Rate limiting for API calls
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffering
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
            
            # Cache bypass
            proxy_cache_bypass $http_upgrade;
            
            # Error handling
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 60s;
        }

        # World Simulator API proxy (similar to /api/ but for /world/ endpoints)
        location /world/ {
            # Rate limiting for World Simulator API calls
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffering
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
            
            # Cache bypass
            proxy_cache_bypass $http_upgrade;
            
            # Error handling
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 60s;
        }

        # WebSocket proxy with enhanced configuration
        location /ws/ {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket specific timeouts
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
            proxy_connect_timeout 60s;
            
            # Disable buffering for WebSockets
            proxy_buffering off;
        }

        # Assets directory with special handling
        location /assets/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
            
            # Handle missing assets gracefully
            try_files $uri =404;
        }

        # Robots.txt
        location = /robots.txt {
            access_log off;
            log_not_found off;
            try_files $uri /robots.txt;
        }

        # Favicon handling
        location = /favicon.ico {
            access_log off;
            log_not_found off;
            expires 1y;
            try_files $uri =204;
        }

        # Security: Block access to sensitive files
        location ~ /\.(ht|git|env|svn) {
            deny all;
            access_log off;
            log_not_found off;
            return 404;
        }

        # Security: Block access to backup files
        location ~ \.(bak|backup|old|orig|tmp)$ {
            deny all;
            access_log off;
            log_not_found off;
            return 404;
        }

        # SPA fallback - serve index.html for all other routes
        location / {
            # Rate limiting for general requests
            limit_req zone=general burst=10 nodelay;
            
            # Try to serve request as file, then as directory, then fall back to index.html
            try_files $uri $uri/ @fallback;
            
            # Cache control for HTML files
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        # Fallback location for SPA routing
        location @fallback {
            rewrite ^.*$ /index.html last;
        }

        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            internal;
            try_files /index.html =404;
        }
        
        location = /50x.html {
            internal;
            try_files /index.html =500;
        }
    }
}