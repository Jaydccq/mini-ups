# ===== Mini-UPS Production Environment Configuration =====

# === UPS Service Configuration ===
UPS_POSTGRES_DB=ups_db
UPS_POSTGRES_USER=postgres
UPS_POSTGRES_PASSWORD=abc123
UPS_REDIS_PASSWORD=test123
UPS_RABBITMQ_USER=guest
UPS_RABBITMQ_PASSWORD=guest

# JWT Secret (IMPORTANT: Change this in production!)
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production-min-256-bits

# World Simulator Integration
NUM_TRUCKS=5
WORLD_ID=1

# === Amazon Service Configuration ===
AMAZON_SECRET_KEY=your-amazon-flask-secret-key-change-this-in-production

# === Docker Images Configuration ===
# Use 'latest' for local builds, or specify version tags for production
UPS_BACKEND_IMAGE=mini-ups-backend:latest
UPS_FRONTEND_IMAGE=mini-ups-frontend:latest

# === AWS Deployment Configuration (for CI/CD) ===
# These will be set by GitHub Actions
# AWS_REGION=us-east-1
# EC2_HOST=your-ec2-public-ip
# EC2_USER=ubuntu
# EC2_KEY_PATH=/path/to/ssh/key

# === Logging Configuration ===
LOG_LEVEL=INFO
LOG_PATH=/var/log/mini-ups

# === Performance Tuning ===
# Database connection pool sizes
UPS_DB_POOL_SIZE=10
AMAZON_DB_POOL_SIZE=5

# JVM settings for Spring Boot
JAVA_OPTS=-Xms512m -Xmx1024m -XX:+UseG1GC

# === Network Configuration ===
# Internal Docker network subnet
DOCKER_SUBNET=172.20.0.0/16

# === Backup Configuration ===
BACKUP_RETENTION_DAYS=7
BACKUP_PATH=/var/backups/mini-ups

# === Monitoring Configuration ===
HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=10s
HEALTH_CHECK_RETRIES=3

# === Security Configuration ===
# SSL/TLS settings (optional)
ENABLE_SSL=false
SSL_CERT_PATH=/etc/ssl/certs/mini-ups.crt
SSL_KEY_PATH=/etc/ssl/private/mini-ups.key

# === Development/Debug Settings ===
DEBUG_MODE=false
ENABLE_SWAGGER=false
ENABLE_ACTUATOR=true